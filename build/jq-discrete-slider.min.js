/*! jq-discrete-slider 2013-11-18 */
!function(){function a(a,b){"use strict";this.setup(a,b||{}),this.prepareData();var c=$("<div/>");c.append(this.renderMarks()),c.append(this.renderHandler()),this.name&&c.append(this.renderInput()),this.$element.append(c);var d=$.proxy(function(a){var b=a.pageX-this.$element.offset().left;b=0>b?0:b,b=b>this.width?this.width:b,this.$handler.css({left:b})},this),e=$.proxy(function(){$("body").removeClass("jqslider-dragging"),$(window).unbind("mousemove",d),$(window).unbind("mouseup",e),this.setValue(this.getValue(this.$handler.position().left))},this);c.on("mousedown",".handler",function(){$("body").addClass("jqslider-dragging"),$(window).bind("mousemove",d),$(window).bind("mouseup",e)}).on("click",">ul>li",$.proxy(function(a){return this.setValue(this.getValue($(a.target).position().left)),!1},this))}var b="jqslider";a.prototype.setup=function(a,b){this.$element=$(a).addClass("jqslider"),this.width=this.$element.innerWidth(),this.data=b.data||[],this.value=b.value||0,this.name=b.name,this.onChange=b.onChange},a.prototype.prepareData=function(){this.data.sort(function(a,b){return a.value-b.value}),this.maxValue=this.data[this.data.length-1].value},a.prototype.renderMarks=function(){for(var a=$("<ul/>"),b="",c=0;c<this.data.length;c++)b+='<li style="left:'+Math.floor(this.width*this.data[c].value/this.maxValue)+'px;" data-label="'+(this.data[c].label||"")+'"/>';return a.html(b)},a.prototype.renderHandler=function(){return this.$handler=$('<div class="handler" style="left:'+this.width*this.value/this.maxValue+'px;"/>')},a.prototype.renderInput=function(){return this.$input=$('<input type="hidden" name="'+this.name+'"value="'+this.value+'"/>')},a.prototype.getValue=function(a){var b=this.width,c=this.data,d=Math.round(this.maxValue*a/b),e=$.grep(c,function(a,b){var e=!1;return d==a.value?!0:e=d>a.value&&d<c[b+1].value||d<a.value&&d>c[b-1].value});return 1==e.length?e[0].value:e[Math.round((e[0].value-d)/(e[0].value-e[1].value))].value},a.prototype.setValue=function(a){this.value=a,this.$handler.css({left:this.width*a/this.maxValue}),this.$input&&this.$input.val(a).trigger("change"),"function"==typeof this.onChange&&this.onChange.call(this.$element[0],a)},$.fn[b]=function(c){return this.each(function(){$.data(this,b)||$.data(this,b,new a(this,c))})}}();